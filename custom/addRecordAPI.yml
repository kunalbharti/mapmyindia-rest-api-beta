openapi: 3.0.3
info:
  title: Add a Record API
  description: >-
    This API allows one to dynamically add record to the Nearby Record finder database. These records are used to perform Nearby Searches on the different types of user records that are stored within Nearby Record finder database.
    <br><br>This APIs follow OAuth2 based security. **To know more on how to create your authorization tokens, please use our authorization token URL. More details available**  [here](https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php).
  termsOfService: 'https://www.mapmyindia.com/api/terms-&-conditions'
  version: 1.0.0
  license:
    name: MapmyIndia License Key Signup
    url: https://www.mapmyindia.com/api/
  contact:
    name: MapmyIndia API Support
    email: apisupport@mapmyindia.com
    url: https://www.mapmyindia.com/api/
security: 
  - BearerAuth: []
servers:
  - url: https://app.mapmyindia.com
    description: 'Prod server for Nearby Record Finder APIs'
paths:
  /v1/api/addrecord/json:
    post:
      tags: 
        - Add a Record API
      description: >-
        This API allows one to dynamically add record to the Nearby Record finder database. These records are used to perform Nearby Searches on the different types of user records that are stored within Nearby Record finder database.
        <br>The API leverages OAuth 2.0 based security. Hence, the developer would need to send a request for access token using their client_id and client_secret to the OAuth API. Once validated from the OAuth API, the access_token and the token_type need to be sent as Authorization header with the value: "{`token_type`} {`access_token`}”. <br><strong>Authorization</strong>: `token_type` `access_token`.
      summary: >-
         Add a Record API
      operationId: AddaRecordAPI
      parameters:
        # - name: Authorization
        #   in: header
        #   description: >-
        #     Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
        #   required: true
        #   allowEmptyValue: false
        #   schema:
        #     type: string
        #   example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
        - name: recordId
          in: query
          description: 'Unique ID for a record.'
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: "ABC1234"
        - name: recordEloc
          in: query
          description: >-
            '6 digit unique digital address of the record.'
          required: true
          allowEmptyValue: false
          example: "DR9VJ7"
          schema:
            type: string
        - name: recordType
          in: query
          description: 'Unique ID of the Module. This needs to be pre-arranged between Client and MapmyIndia to certain predetermined values. These values CANNOT be generated on the fly and need to be pre-fed into the system.'
          example: "moduleID"
          required: true
          allowEmptyValue: false
          schema:
            type: string
        - name: customNote
          in: query
          description: 'Add a note after updating the record.'
          example: "Updated the ID"
          required: false
          allowEmptyValue: false
          schema:
            type: string
        - name: recordCoordinates
          in: query
          description: >-
            The coordinates of the record. This request parameter is <strong>mutually exclusive</strong> to `recordEloc` input parameter and becomes mandatory if `recordEloc` is not provided in the request. <br><br>The coordinates are comma separated latitude,longitude values. 
          required: false
          allowEmptyValue: false
          example: "28.7985267,77.162543"
          schema:
            type: string
      responses:
        '201':
          description: Created
        '204':
          description: Not found
        '400':
          description: Bad request
        '401':
          description: API access denied
        '403':
          description: Forbidden
        '500':
          description: Something went wrong
        '503':
          description: Internal server error
      deprecated: false
components:
  securitySchemes:
    BearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: 'bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6'