openapi: 3.0.3
info:
  title: Search APIs
  description: "MapmyIndia Search APIs unleash the full potential of MapmyIndia Maps to provide users with ultimate location discoverability experience. It helps users explore our comprehensive & accurate map with over 50 million places mapped for India & its neighbouring nations."
  termsOfService: 'https://www.mapmyindia.com/api/terms-&-conditions'
  version: 1.0.0
  license:
    name: MapmyIndia License Key Signup
    url: https://www.mapmyindia.com/api/signup
  contact:
    name: MapmyIndia API Support
    email: apisupport@mapmyindia.com
    url: https://www.mapmyindia.com/api/
servers:
  - url: https://atlas.mapmyindia.com
    description: 'Live Prod server for OAuth 2 based APIs'
  - url: https://apis.mapmyindia.com/advancedmaps/v1
    description: 'Live Prod server for Static Key based APIs'
  - url: https://outpost.mapmyindia.com/api
    description: 'Live Prod Server for Token Generation API'
paths:
  /security/oauth/token: 
    post: 
      tags: 
        - Token Generation API
      description: >-
        This API is required to generate tokens authorize the oAuth 2 based APIs. <br> Hence, the developer would need to send a request for access token using their client_id and client_secret to the Token Generation API. <br>Once validated from the OAuth API, the access_token and the token_type need to be sent as Authorization header with the value: <strong> {token_type} {access_token} </strong>
            <br> Authorization: “token_type access_token”.
      summary: >-
        Token Generation API
      operationId: tokenGenerationAPI
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
             properties:
                grant_type: 
                  description: >-
                    The grant type applicable to the token. By default, it is set at "client_credentials".
                  type: string
                  example: "client_credentials"
                client_id:
                  description: >-
                    The client ID provided to thec client for accessing oAuth 2 based APIs.
                  type: string
                  example: "this-is-client-id-provided-to-client"
                client_secret: 
                  description: >-
                    The client secret provided to thec client for accessing oAuth 2 based APIs.
                  type: string
                  example: "this-is-client-secret-provided-to-client"
             required:
               - grant_type
               - client_id
               - client_secret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResults'
        '400':
          description: Bad request; User made an error while creating a valid request.
        '401':
          description: Unauthorized, if the clientID doesn’t exist or an invalid clientSecret is provided.
        '403':
          description: Forbidden.
        '500':
          description: Something went wrong.
        '503':
          description: Maintenance break.
  /api/places/search/json:
    get:
      tags: 
        - oAuth 2 based APIs
      description: >-
        The Autosuggest API helps users to complete queries faster by adding intelligent search capabilities to your web or mobile app. This API returns a list of results as well as suggested queries as the user types in the search field. This API also supports Hindi language. If a user enters query in hindi language he will get results in Hindi.
        <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-auto-suggest-api-example.php">Live Demo</a> | <a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-auto-suggest-api-example">Download Sample Code</a> </p>
      summary: >-
         AutoSuggest API
      operationId: AutoSuggestAPI
      parameters:
        - name: Authorization
          in: header
          description: >-
            Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
        - name: query
          in: query
          description: 'Enter the query on which the search has to be done.'
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: "mapmyindia"
        - name: location
          in: query
          description: 'Location is required to get location biased autosuggest results.'
          required: false
          allowEmptyValue: false
          example: "28.454,77.435"
          schema:
            type: string
        - name: region
          in: query
          description: 'It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND).'
          example: "IND"
          required: false
          allowEmptyValue: false
          schema:
            type: string
        - name: tokenizeAddress
          in: query
          description: 'It is the valueless parameter provides the different address attributes in a structured object.'
          required: false
          allowEmptyValue: true
          schema:
            type: boolean
        - name: pod
          in: query
          description: 'It takes in the place type code which helps in restricting the results to certain chosen type.<br>
            Below mentioned are the codes for the pod:<br><ul>
            <li>SLC: Sublocality
            <li>LC: Locality
            <li>CITY: City
            <li>VLG: Village
            <li>SDIST: Subdistrict
            <li>DIST: District
            <li>STATE: State
            <li>SSLC: Subsublocality'
          required: false
          example: "CITY"
          schema:
            type: string
          allowEmptyValue: false
        - name: filter
          in: query
          description: 'This parameter helps you restrict the result either by mentioning a bounded area or to certain eloc (6 digit code to any poi, locality, city, etc.), below mentioned are the both types:<br><ul><li>filter = pin:It takes pincode/postal code of an area{e.g. filter=pin:110055}<li>filter = bounds lat1,lng1;lat2,lng2(latitude,longitude){e.g. filter=bounds 28.598882, 77.212407; 28.467375, 77.353513}<li>filter = cop {eloc} (string) {e.g. filter=cop:YMCZ0J}</ul>'
          required: false
          example: "pin:110001"
          allowEmptyValue: false
          schema:
            type: string
        - name: bridge
          in: query
          description: '(Valueless)It initiates a bridge to be created to provide applicable nearby API searches in the `suggestedSearches` response object.'
          required: false
          allowEmptyValue: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutosuggestAPIResults'
        '204':
          description: Not found
        '400':
          description: Bad request
        '401':
          description: API access denied
        '403':
          description: Forbidden
        '500':
          description: Something went wrong
        '503':
          description: Internal server error
      deprecated: false
  /api/places/geocode:
    get:
      tags:
        - oAuth 2 based APIs
      description: >-
        All mapping APIs that are used in mobile or web apps need some geo-position coordinates to refer to any given point on the map. Our Geocoding API converts real addresses into these geographic coordinates (latitude/longitude) to be placed on a map, be it for any street, area, postal code, POI or a house number etc.
        <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-atlas-geocoding-rest-api-example.php">Live Demo</a> | <a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-geocoding-rest-api-example">Download Sample Code</a> </p>
      summary: >-
        Geocode API
      operationId: AtlasGeocodeAPI
      parameters:
        - name: Authorization
          in: header
          description: >-
            Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
        - name: address
          in: query
          description: 'address to be geocoded'
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: '237 Okhla industrial estate phase 3 new delhi, delhi 110020'
        - name: itemCount
          in: query
          description: 'parameter can be set to get maximum number of result items from the API (default: 1).'
          required: false
          allowEmptyValue: false
          schema:
            type: integer
          example: 1
        - name: bias
          in: query
          description: 'This parameter can be used to set Urban or Rural bias. A positive value sets the Urban bias and a negative value sets Rural bias. Allowed values are:<br><ul>
          <li>`0` : Default: (No bias)
          <li>`-1` : Rural
          <li>`1` : Urban</ul>'
          required: false
          allowEmptyValue: false
          example: 0
          schema:
            type: integer
        - name: podFilter
          in: query
          description: 'This parameter can be used to set admin level restriction. The result will be either the given admin level or equivalent admin or higher in the hierarchy. No lower admin will be considered for geocoding.<br> Allowed values are:<br>
          <li>`hno` : house number
          <li>`hna` : house name
          <li>`poi` : point of interest
          <li>`street` : street
          <li>`sslc` : sub sub locality
          <li>`village` : village
          <li>`slc` : sub locality
          <li>`sdist` : sub district
          <li>`loc` : locality
          <li>`city` : city
          <li>`dist` : district
          <li>`pincode` :pincode
          <li>`state` : state'
          schema:
            type: string
        - name: bound
          in: query
          description: 'This parameter can be used to set admin boundary, which means geocoding will be done within the given admin. The allowed admin bounds are **Sub-District**, **District**, **City**, **State** and **Pincode**. The parameter accepts the admin eLoc as value.<br><br>**Note:** Please note that `podFilter` & `bound` parameters are mutually exclusive. They cannot be used together in an API call.'
          example: "TAVI5S"
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/geocodeResults'
        '204':
          description: Not found
        '400':
          description: Bad request
        '401':
          description: API access denied
        '403':
          description: Forbidden
        '500':
          description: Something went wrong
        '503':
          description: Internal server error
      deprecated: false
  /api/places/nearby/json:
    get:
      tags:
        - oAuth 2 based APIs
      description: >-
        Nearby Places API, enables you to add discovery and search of nearby POIs by searching for a generic keyword used to describe a category of places or via the unique code assigned to that category.
        <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-near-by-api-example.php">Live Demo</a> | <a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-near-by-api-example">Download Sample Code</a> </p>
      summary: >-
        Nearby API
      operationId: AtlasNearbyAPI
      parameters:
        - name: Authorization
          in: header
          description: >-
            Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
          required: true
          allowEmptyValue: false
          schema:
            type: string
          example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
        - name: keywords
          in: query
          description: 'Enter the query on which the search has to be done.<br><h3>Operators in `Keywords` parameter</h3><h4>To send multiple keywords in a request, we’ve defined a couple of operators that can help the developers wrap their applications around this functionality. Below are the operators:<ol><li>The “ ; ” Operator: This operator is an “or” operator. Defining multiple keywords separated with a “ ; ” would provide results that satisfies either of the keywords.<li>The “ $ ” Operator: This operator is a “and” operator. Defining multiple keywords separated with a “ $ ” would provide results that satisfy all the provided keywords. (default).</ol><br>To use these operators, simple just send in the keywords parameter like below:<br>`&keywords=coffee ; tea $ sea food ; alcohol`<br>The above nearby search would yield in results that either provide coffee or tea but must provide either sea food or alcohol.<br>**Please Note**: the spacing in the above example is of no relevance to the search result. It’s just there to provide better understanding.'
          required: true
          allowEmptyValue: false
          example: "FODCOF"
          schema:
            type: string
        - name: refLocation
          in: query
          description: >-
            Provides the location around which the search will be performed. e.g. `refLocation=28.454,77.435`. <br> The refLocation parameter can also accept <strong>eLoc</strong> as reference location. <br> This configuration is not active by default. <br>Please contact MapmyIndia API support for further details. <br>Example: <code>refLocation=17ZUL7</code>
          example: "28.454,77.435"
          required: true
          schema:
            type: string
          allowEmptyValue: false
        - name: page
          in: query
          description: 'provides number of the page to provide results from.'
          required: false
          allowEmptyValue: false
          example: 1
          schema:
            type: integer
        - name: region
          in: query
          description: 'it takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)'
          allowEmptyValue: false
          required: false
          example: "IND"
          schema:
            type: string
        - name: radius
          in: query
          description: 'Provides the range of distance to search over (default 1000, min, 500, max, 10000)'
          allowEmptyValue: false
          example: 10000
          schema:
            type: integer
        - name: bounds
          in: query
          description: '(x1,y1;x2,y2) Allows the developer to send in map bounds to provide a nearby search of the geobounds. where x1,y1 are the lat lng of the bound. The bounds are set from topLeft to bottomRight (North-West to South-East).'
          allowEmptyValue: false
          example: "28.639256,77.211133;28.625214,77.237483"
          schema:
            type: string
        - name: filter
          in: query
          description: 'It uses key:value pair(s) to fine tune discovery of places by filtering the results. e.g. categoryCode:FODCOF <br><ul><li>valid IDs for key value pairs are:<ul><li>`categoryCode`: can take in category codes as input'
          allowEmptyValue: false
          example: "categoryCode:FODCOF"
          schema:
            type: string
        - name: sortBy
          in: query
          description: 'Provides configured sorting operations for the client on cloud. Below are the available sorts:<br><ul><li>`dist:asc & dist:desc` - will sort data in order of distance from the passed location (default).<li>`name:asc & name:desc` - will sort the data on alphabetically bases.<li>`imp` - will sort data in order of decreasing prominence of the place.'
          allowEmptyValue: false
          example: "dist:asc"
          schema:
            type: string
        - name: searchBy
          in: query
          description: 'provides configurable search operations for the client on cloud. Below are the available sorts:<br><ul><li>`dist`(default) - will sort data in order of distance from the passed location (default).<li>`imp` - will search data in order of prominence of the place.'
          allowEmptyValue: false
          schema:
            type: string
          example: "dist"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nearbyResults'
        '204':
          description: Not found
        '400':
          description: Bad request
        '401':
          description: API access denied
        '403':
          description: Forbidden
        '500':
          description: Something went wrong
        '503':
          description: Internal server error
      deprecated: false
  /api/places/textsearch/json:
      get:
        tags:
          - oAuth 2 based APIs
        description: >-
          Text Search API is a service that aims to provide information about a list of places on the basis of a text string entered by the user. It uses the location information that is provided along with the query to try to understand the request. This API now supports Hindi language so you can now search queries in Hindi too.
          <p style=text-align:right><strong><a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-textsearch-api">Download Sample Code</a> </p>
        summary: >-
          Text Search API
        operationId: AtlasTextSearchAPI
        parameters:
          - name: Authorization
            in: header
            description: >-
              Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
            required: true
            allowEmptyValue: false
            schema:
              type: string
            example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
          - name: query
            in: query
            description: 'e.g. FODCOF, Shoes, Coffee, Versace, Gucci, H&M, Adidas, Starbucks, B130 {POI, House Number, keyword, tag}'
            allowEmptyValue: false
            required: true
            schema:
              type: string
            example: "Where is Lajpat Nagar"
          - name: region
            in: query
            description: 'It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)'
            schema:
              type: string
            allowEmptyValue: false
            example: 'IND'
          - name: location
            in: query
            description: 'Provides the location around which the search will be performed. e.g. `location=28.454,77.435` It is STRONGLY RECOMMENDED to use this parameter for accurate location biased results.'
            allowEmptyValue: false
            schema:
              type: string
            example: '28.454,77.435'
          - name: filter
            in: query
            description: 'Filter parameter helps you restrict the result by mentioning pincode. e.g. `filter=pin:110020`'
            allowEmptyValue: false
            schema:
              type: string
            example: 'pin:110020'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TextSearchAPIResults'
          '204':
            description: Not found
          '400':
            description: Bad request
          '401':
            description: API access denied
          '403':
            description: Forbidden
          '500':
            description: Something went wrong
          '503':
            description: Internal server error
        deprecated: false
  /api/places/woodpecker:
      get:
        tags:
          - oAuth 2 based APIs
        description: >-
          Address Standardization API is a process to convert the non formatted address into the user readable format by omitting unnecessary information in the address. MapmyIndia address standardization API provides real addresses along with admin and other information.
          <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/woodpecker_demo/">Live Demo</a> </p>
        summary: >-
          Address Standardization API
        operationId: WoodpeckerAPI
        parameters:
          - name: Authorization
            in: header
            description: >-
              Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
            required: true
            allowEmptyValue: false
            schema:
              type: string
            example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
          - name: address
            in: query
            description: 'The full human readable address that needs to be standardized'
            schema:
              type: string
            allowEmptyValue: false
            required: true
            example: '237 Okhla industrial estate phase 3 new Delhi, Delhi 110020'
          - name: bias
            in: query
            description: 'parameter value can be set to get the bias result towards the urban or rural side. (Default is 1.5 : urban). Where 1 is neutral and < 1 is rural biased and > 1 is Urban biased.'
            allowEmptyValue: false
            example: 1.5
            schema:
              type: number
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WoodpeckerResults'
          '204':
            description: Not found
          '400':
            description: Bad request
          '401':
            description: API access denied
          '403':
            description: Forbidden
          '500':
            description: Something went wrong
          '503':
            description: Internal server error
        deprecated: false
  /{REST_KEY}/place_detail:
      get:
        tags:
          - Static Key based APIs
        description: >-
          MapmyIndia eloc is a simple, standardized and precise pan-India digital address system. Every location has been assigned a unique digital address or an eLoc. The eLoc API can be used to extract the details of a place with the help of its eLoc i.e. a 6 digit code or a place_id.
          <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-place-details-api-example.php">Live Demo</a> | <a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-place-details-api-example">Download Sample Code</a> </p>
        summary: >-
          eLoc API (Place Detail)
        operationId: eLocAPI
        parameters:
          - name: place_id
            in: query
            description: 'Six or Eight Digit unique code.'
            allowEmptyValue: false
            required: true
            example: "MMI000"
            schema:
              type: string
          - name: REST_KEY
            in: path
            description: 'The REST API licence key allocated to you by signing into our services and registering yourself as a developer.'
            allowEmptyValue: false
            required: true
            example: "threstapikeywillcomeheretoaccess"
            schema:
              type: string
          - name: region
            in: query
            description: 'It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)'
            allowEmptyValue: false
            example: "IND"
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EL1'
          '204':
            description: Not found
          '400':
            description: Bad request
          '401':
            description: API access denied
          '403':
            description: Forbidden
          '500':
            description: Something went wrong
          '503':
            description: Internal server error
        deprecated: false
  /{REST_KEY}/rev_geocode:
      get:
        tags:
          - Static Key based APIs
        description: >-
          Reverse Geocoding is a process to give the closest matching address to a provided geographical coordinates (latitude/longitude). MapmyIndia reverse geocoding API provides real addresses along with nearest popular landmark for any such geo-positions on the map. This API also works in Hindi language response.
          <p style=text-align:right><strong><a href="https://www.mapmyindia.com/api/advanced-maps/doc/sample/mapmyindia-vector-maps-reverse-geocoding-rest-api-example.php">Live Demo</a> | <a href="https://github.com/MapmyIndia/mapmyindia-rest-api/tree/master/mapmyindia-maps-reverse-geocoding-rest-api-example">Download Sample Code</a> </p>
        summary: >-
          Reverse Geocode API
        operationId: ReverseGeocodeAPI
        parameters:
          - name: lat
            in: query
            description: 'The latitude of the location'
            allowEmptyValue: false
            required: true
            example: 28.569548
            schema:
              type: number
          - name: lng
            in: query
            description: 'The longitude of the location'
            allowEmptyValue: false
            required: true
            example: 77.856954
            schema:
              type: number
          - name: REST_KEY
            in: path
            description: 'The rest key allocated to your account.'
            allowEmptyValue: false
            required: true
            example: "threstapikeywillcomeheretoaccess"
            schema:
              type: string
          - name: region
            in: query
            description: 'It takes in the country code. LKA, IND, BTN, BGD, NPL for Sri-Lanka, India, Bhutan, Bangladesh, Nepal respectively. Default is India (IND)'
            allowEmptyValue: false
            example: 'IND'
            schema:
              type: string
          - name: lang
            in: query
            description: 'This parameter accepts the "hi" (ISO 639-1 Language Code for Hindi) as a value.'
            allowEmptyValue: false
            example: 'hi'
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RG1'
          '204':
            description: Not found
          '400':
            description: Bad request
          '401':
            description: API access denied
          '403':
            description: Forbidden
          '500':
            description: Something went wrong
          '503':
            description: Internal server error
        deprecated: false
  /api/places/along_route: 
    post:
        tags:
          - oAuth 2 based APIs
        description: >-
          With POI Along the Route API user will be able to get the details of POIs of a particular category along his set route. The main focus of this API is to provide convenience to the user and help him in locating the place of his interest on his set route.
        summary: >-
          POI Along the Route API
        operationId: AtlasPOIAlongtheRouteAPI
        parameters:
          - name: Authorization
            in: header
            description: >-
              Authorization header with the value: “{token_type} {access_token}”. <br> Please generate your token from token generation API before calling this API.
            required: true
            allowEmptyValue: false
            schema:
              type: string
            example: "bearer 0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6"
        requestBody:
          content:
            'application/x-www-form-urlencoded':
              schema:
               properties:
                  path: 
                    description: >-
                      This parameter takes the encoded route along which POIs to be searched.
                    type: string
                    example: "mfvmDcalvMB?B?@EB}@lABzABrBDAaAFoDFuCFuC@{@@m@DoAFu@D_@VmAFWHSHKBCFCbA]n@S`@IX?^BdAL|ANtCV~ANXBfBDfBBl@Bp@BrA@Pa@FKHMf@@`CHXDLBJFHJHRbD@`D@Z?h@@f@@h@@bAB^@jDDlBB~@BT@N?dDDV?x@Bt@@dCFdCFzB@nD?N?|BEzBEzBE`@AJ?lCOxCMfAClCGnCIlCIlCIhDKfDIhDIzCK|AG|AEbBG`A@d@FVD^FjARlBVn@D`AD|@Fn@DnCZnCZtBTH@J?V@`A@lC@nC@lCB`AGNCTCPEl@SRI|@a@~BqAb@OZGt@E|BEl@AxA?|@?pA@T?V@bCB`AJNBn@L^NpAl@t@`@d@V~BlA`CnA~BnA`A`@VJd@NXF~@JN@xBBL?hA?x@Ar@?x@A@?vCAvCAvCAxCAj@F`@Fd@Nf@RrAn@|@b@dBz@fBz@nBfAJF~Ax@`CfAXLRHp@XtCpAtCrAf@V|@Rf@Px@TxAZ\\F`BL`BLZEPERGNKPQR_@BaBPeEHeAXo@NcDLaDNaDNaDAkB?kAKqDIoD_@mAI{BI{BGgBIgBGiBCm@ASAi@Cu@Cc@Ag@Aa@GgBGgBGkBAu@IeCAUJARARA~@GB?f@C|AK`BIbBIt@IPCPCZO`@[FKLOR]Vk@Pi@DUL{@D[P}CP{C@i@@a@Ae@EiBCiBAyC?_ACaB?QAeBAgB?WB_@BSDSDOTu@dA{Cr@sBRi@JU^q@j@cATYZ_@TUbBsAHIhA}@jA_AlAaA`Ay@bAy@d@c@pAgAv@q@`AcA^_@tAoAVSVQLGdAg@f@Yz@e@W_@KSWIoAuCmAwCLMBCDCNE@AJ?H@F@v@fB\\GNGb@W\\YfAcALI@C@CBADCD@JBDBBBBD@D?DDLBFJNFDHDF@J@|CKbCItAEHCHA@EBEDCDABAF?D@DB@BDH@D?JADL@l@?j@BbAGGcAGiACc@Cm@C["
                  category:
                    description: >-
                      The POI category code to be searched. Only one category input supported.
                    type: string
                    example: "FODCOF"
                  geometries: 
                    description: >-
                      Type of geometry encoding, accepted values are <code>polyline5</code>, <code>polyline6</code>, and <code>base64</code>. Default value is polyline5.
                    type: string
                    example: "polyline5"
                  buffer: 
                    description: >-
                      Buffer of the road. Minimum value is 25, maximum is 1000 and default is 25.
                    type: integer
                    example: 50
                  sort: 
                    description: >-
                      Gets the sorted POIs along route. Valueless parameter.
                    type: boolean
                  page: 
                    description: >-
                      Used for pagination. By default, a request returns maximum 10 results and to get the next 10 or so on pass the page value accordingly. Default is 1.
                    type: integer
                    example: 1
               required:
                 - path
                 - category
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/POIalongtheRouteObject'
          '204':
            description: Not found
          '400':
            description: Bad request
          '401':
            description: API access denied
          '403':
            description: Forbidden
          '500':
            description: Something went wrong
          '503':
            description: Internal server error
        deprecated: false
components:
  schemas:
    tokenResults: 
      title: Token Generation Result
      description: >-
        The result object which contains the token generated from Token Generation API.
      type: object
      required: 
        - access_token
        - token_type
        - expires_in
        - scope
        - project_code
      properties: 
        access_token: 
          type: string
          example: '0XXXXXXf-dXX0-4XX0-8XXa-eXXXXXXXXXX6'
        token_type: 
          type: string
          example: 'bearer'
        expires_in: 
          type: integer
          example: 86499
        scope: 
          type: 'string'
          example: 'READ'
        project_code: 
          type: 'string'
          example: 'prj1234567890987654321'
    AutosuggestAPIResults:
      title: Autosuggest Results
      description: The result object which contains the Autosuggest API results.
      type: object
      required:
        - suggestedLocations
        - userAddedLocation
        - suggestedSearches
      properties:
        suggestedLocations:
          type: array
          items: 
            $ref: '#/components/schemas/AS1'
        userAddedLocation:
          type: array
          items:
            $ref: '#/components/schemas/AS2'
        suggestedSearches:
          type: array
          items:
            $ref: '#/components/schemas/AS3'
    AS1:
      title: Suggested Location
      type: object
      required:
        - type
        - typeX
        - placeAddress
        - latitude
        - longitude
        - eLoc
        - entryLatitude
        - entryLongitude
        - placeName
        - alternateName
        - keywords
        - p
        - distance
        - orderIndex
        - score
        - suggester
        - addressTokens
        - richInfo
      properties:
        type:
          type: string
          description: 'This is the type whether the results is POI or any building point.'
          format: string
          example: 'POI'
        typeX:
          type: integer
          description: 'Type attribute for internal use only for MapmyIndia.'
          format: integer
          example: 7
        placeAddress:
          type: string
          description: 'Address of the location.'
          format: string
          example: 'Yippee Rooms, Sector 56, Gurugram, Haryana, 122011'
        latitude:
          type: number
          description: 'It shows us the latitude of the location searched.'
          format: double
          example: 28.4263350000001
        longitude:
          type: number
          description: 'It shows us the longitude of the location searched.'
          format: double
          example: 77.092001
        eLoc:
          type: string
          description: 'It is the Six or eight digit unique code offered only by mapmyindia to search for any address through this eLoc.'
          format: string
          example: '2LH9OC'
        entryLatitude:
          type: number
          description: 'It shows us the entry latitude of the location searched.'
          format: double
          example: 28.426407
        entryLongitude:
          type: number
          description: 'It shows us the entry longitude of the location searched.'
          format: double
          example: 77.092232
        placeName:
          type: string
          description: This shows the name of the POI
          format: string
          example: 'OYO Hotel'
        alternateName: 
          type: string
          description: 'This shows the alternate name of the POI'
          format: string
          example: 'OyoRooms,OYO 40400 Yippe Rooms,OYO Rooms Hotel'
        keywords:
          type: array
          description: 'The keywords/category codes associated with the given result.'
          items:
            $ref: '#/components/schemas/NB4'
        addressTokens:
          $ref: '#/components/schemas/NB3'
        p:
          type: integer
          description: 'This shows the priority of the POI'
          format: integer
          example: 11663
        orderIndex:
          type: integer
          description: 'This shows the order of the search results priority wise.'
          format: integer
          example: 1
        score:
          type: number
          description: 'This shows the score of the POI.'
          format: integer
          example: 1.5075794782130676
        suggester:
          type: string
          description: 'This shows on which basis the search results has been found.'
          format: string
          example: 'alternateName'
        richInfo:
          type: array
          description: This shows the rich info associated with the given result.
          items:
            type: object
          format: array of strings
          example: ''
    NB3:
      title: tokenizeAddress
      description: It shows the admin details along with the house address.
      type: object
      required:
        - district
        - city
        - state
      properties:
        houseNumber:
          type: string
          description: House Number of the POI.
          format: string
          example: '237'
        houseName:
          type: string
          description: House Name of the POI.
          format: string
          example: 'MMI Building'
        poi:
          type: string
          description: Name of the POI.
          format: string
          example: 'MapmyIndia Head Office'
        street:
          type: string
          description: Name of the street.
          format: string
          example: ''
        subSubLocality:
          type: string
          description: Name of the subsublocality.
          format: string
          example: ''
        subLocality:
          type: string
          description: Name of the sublocality.
          format: string
          example: ''
        locality:
          type: string
          description: Name of the locality.
          format: string
          example: 'Okhla industrial phase 3'
        village:
          type: string
          description: Name of the village.
          format: string
          example: 'Okhla Vilage'
        subDistrict:
          type: string
          description: Name of the subDistrict.
          format: string
          example: ''
        district:
          type: string
          description: Name of the District.
          format: string
          example: 'South Delhi'
        city:
          type: string
          description: Name of the city.
          format: string
          example: 'New Delhi'
        state:
          type: string
          description: Name of the STATE.
          format: string
          example: 'Delhi'
        pincode:
          type: integer
          description: PINcode of the location.
          format: string
          example: '110010'
    AS2:
      title: User Added Location
      description: 'The result object which contains the user added POI results.'
      type: object
      required:
        - eLoc
        - entryLatitude
        - entryLongitude
        - latitude
        - longitude
        - orderIndex
        - placeAddress
        - placeName
        - resultType
        - type
        - userName
      properties:
        eLoc:
          type: string
          description: 'It is the Six or eight digit unique code offered only by mapmyindia to search for any address through this eLoc.'
          format: string
          example: '2LH9OC'
        entryLatitude:
          type: number
          format: double
          example: 28.631708
          description: 'latitude of the entrance of the location.'
        entryLongitude:
          type: number
          format: double
          example: 77.631708
          description: 'longitude of the entrance of the location.'
        latitude:
          type: number
          description: 'It shows us the latitude of the location searched.'
          format: double
          example: '28.4263350000001'
        longitude:
          type: number
          description: 'It shows us the longitude of the location searched.'
          format: double
          example: 77.092001
        orderIndex:
          type: integer
          description: 'This shows the order of the search results priority wise.'
          format: integer
          example: 1
        placeAddress:
          type: string
          description: 'This is the address of the text searched by you.'
          format: string
          example: 'Yippee Rooms, Sector 56, Gurugram, Haryana, 122011'
        placeName:
          type: string
          description: 'This shows the name of the POI.'
          format: string
          example: OYO Hotel
        resultType:
          type: string
          description: 'It Shows the the category of result falling into. For eg. UAP'
          format: string
          example: UAP
        type: 
          type: string
          format: string
          example: ''
        userName: 
          type: string
          description: 'It shows the UserID of the person who added the location.'
          format: string
          example: usr1577100139i799918080
    AS3:
      title: Suggested Search
      description: 'The result object which contains the Auto Suggest API Suggested results shows.'
      type: object
      required:
        - keyword
        - identifier
        - location
        - hyperlink
        - orderIndex
        - eLoc
      properties:
        keyword:
          type: string
          description: 'It shows the result keyword'
          format: string
          example: 'corona testing lab'
        identifier:
          type: string
          description: 'on what basis the results shown'
          format: string
          example: 'near'
        location: 
          type: string
          description: 'location near the results are shown'
          format: string
          example: 'me'
        hyperlink:
          type: string
          description: 'direct link of the poi.'
          format: string
          example: 'https://atlas.mapmyindia.com/api/places/nearby/json?explain&richData&username=atlasuser&refLocation=28.550592,77.26877&keywords=hsptst'
        orderIndex:
          type: integer
          description: 'This shows the order of the search results priority wise.'
          format: integer
          example: 0
        eLoc:
          type: string
          description: 'It is the Six or eight digit unique code offered only by mapmyindia to search for any address through this eLoc.'
          format: string
          example: 'null'
    geocodeResults:
      title: Geocode Results
      description: The result object which contains the Geocode API results.
      type: object
      required:
        - copResults
      properties:
        copResults:
          $ref: '#/components/schemas/GC1'
    GC1:
      title: copResult
      description: This shows the array of results when the itemcount is more than 1.
      type: object
      required:
        - district
        - city
        - state
        - formattedAddress
        - eLoc
        - latitude
        - longitude
        - geocodeLevel
        - confidenceScore
      properties:
        houseNumber:
          type: string
          description: 'House Number of the POI.'
          format: string
          example: '237'
        houseName:
          type: string
          description: 'House Name of the POI.'
          format: string
          example: 'MMI Building'
        poi:
          type: string
          description: 'Name of the POI.'
          format: string
          example: 'MapmyIndia Head Office'
        street:
          type: string
          description: 'Name of the street.'
          format: string
          example: ''
        subSubLocality:
          type: string
          description: 'Name of the subsublocality.'
          format: string
          example: ''
        subLocality:
          type: string
          description: 'Name of the sublocality.'
          format: string
          example: ''
        locality:
          type: string
          description: 'Name of the locality.'
          format: string
          example: 'Okhla industrial phase 3'
        village:
          type: string
          description: 'Name of the village.'
          format: string
          example: 'Okhla Vilage'
        subDistrict:
          type: string
          description: 'Name of the subDistrict.'
          format: string
          example: ''
        district:
          type: string
          description: 'Name of the District.'
          format: string
          example: 'South Delhi'
        city:
          type: string
          description: 'Name of the city.'
          format: string
          example: 'New Delhi'
        state:
          type: string
          description: 'Name of the State.'
          format: string
          example: 'Delhi'
        pincode:
          type: integer
          description: 'Pincode of the location.'
          format: string
          example: '110010'
        formattedAddress:
          type: string
          description: 'This shows the formatted address of the POI.'
          format: string
          example: '237, MMI Building, MapmyIndia Head Office, Okhla industrial phase 3, Okhla Vilage, South Delhi, New Delhi, Delhi, 110010'
        eLoc:
          type: string
          description: 'It is the Six or eight digit unique code offered only by mapmyindia to search for any address through this eLoc.'
          format: string
          example: '2LH9OC'
        latitude:
          type: integer
          description: 'It shows us the latitude of the location searched.'
          format: double
          example: 28.4263350000001
        longitude:
          type: integer
          description: 'It shows us the longitude of the location searched.'
          format: double
          example: 77.092001
        geocodeLevel:
          type: string
          description: 'This shows the level of the geocode means on which basis the poi has been geocoded.'
          format: string
          example: houseNumber
        confidenceScore:
          type: integer
          description: 'The confidence for current of geocodelevel.'
          format: float
          example: 0.4
    nearbyResults:
      title: Nearby Results
      description: The result object which contains the Nearby API results.
      type: object
      required:
        - suggestedLocations
        - pageInfo
      properties:
        suggestedLocations:
          type: array
          items:
            $ref: '#/components/schemas/NB1'
        pageInfo:
          $ref: '#/components/schemas/NB2'
    NB1:
      title: Suggested Locations
      required:
        - addressTokens
        - distance
        - eloc
        - email
        - entryLatitude
        - entryLongitude
        - hourOfOperation
        - keywords
        - landlineNo
        - latitude
        - longitude
        - mobileNo
        - orderIndex
        - placeAddress
        - placeName
        - type
      type: object
      properties:
        addressTokens:
          type: object
          $ref: '#/components/schemas/NB3'
        distance:
          type: string
          format: string
          example: 64
          description: 'provides the distance from the provided location bias in meters'
        eloc:
          type: string
          format: string
          example: CHZZ3S
          description: 'Place Id of the location 6-char alphanumeric'
        email:
          type: string
          format: string
          example: xyz@email.com
          description: 'Email for contact'
        entryLatitude:
          type: number
          format: double
          example: 28.631708
          description: 'latitude of the entrance of the location'
        entryLongitude:
          type: number
          format: double
          example: 77.21665
          description: 'longitude of the entrance of the location'
        hourOfOperation:
          type: string
          format: string
          example: poi
          description: 'The hours of operation of the POI in a day.'
        keywords:
          type: array
          description: 'The keywords/category codes associated with the given result.'
          items:
            $ref: '#/components/schemas/NB4'
        landlineNo:
          type: number
          format: integer
          example: 911133107634
          description: 'phone no for contact'
        latitude:
          type: number
          format: double
          example: 28.631834
          description: 'Latitude of the location'
        longitude:
          type: number
          format: double
          example: 77.2169160000001
          description: 'longitude of the location'
        mobileNo:
          type: number
          format: integer
          example: 919999827144
          description: 'Phone number for contact'
        orderIndex:
          type: integer
          format: integer
          example: 1
          description: 'the order where this result should be placed'
        placeAddress:
          type: string
          format: string
          example: 'G-72, 1st Floor, Outer Circle, Connaught Place, New Delhi, Delhi, 110001'
          description: 'Address of the location'
        placeName:
          type: string
          format: string
          example: Lord of The Drinks
          description: 'Name of the location'
        type:
          type: string
          format: string
          example: poi
          description: 'Type of location POI or Country or City'
    NB2:
      title: Page Info
      required:
        - pageCount
        - totalHits
        - totalPages
        - pageSize
      properties:
        pageCount:
          type: integer
          format: integer
          example: 1
          description: 'The number of pages with results.'
        totalHits:
          type: integer
          format: integer
          example: 2730
          description: 'Total number of places in the results.'
        totalPages:
          type: integer
          format: integer
          example: 2730
          description: 'Total number of pages as per page size and no of results.'
        pageSize:
          type: integer
          format: integer
          example: 2730
          description: 'The number of results per page.'
    NB4:
      title: Keywords
      type: object
      example: 'FINATM'
    TextSearchAPIResults:
      title: Text Search API Results
      description: The result object which contains the Text Search API results.
      type: object
      required:
        - suggestedLocations
        - userAddedLocations
      properties:
        suggestedLocation:
          type: array
          items:
            $ref: '#/components/schemas/AS1'
        userAddedLocation:
          type: array
          items:
            $ref: '#/components/schemas/AS2'
    WoodpeckerResults:
      title: Woodpecker Result
      description: The result object which contains the Address Standardization API results.
      type: object
      required: 
        - inputAddress
        - remainingAddress
        - referentialInformation
        - addressInformation
      properties:
        inputAddress:
          type: string
          description: this is the address entered by the user.
          format: string
          example: '237, MapmyIndia Head Office, Okhla Phase 3, New Delhi, Delhi 110010'
        remainingAddress:
          type: string
          description: this is the address striked out by the API.
          format: string
          example: 'mapmyindia head office, okhla new'
        referentialInformation:
          $ref: '#/components/schemas/WP1'
        addressInformation:
          $ref: '#/components/schemas/WP3'
    WP1:
      title: Woodpecker Referential Information
      description: The result object which contains the Address Standardization API results.
      type: object
      required:
        - pincodes
        - floors
        - roads
        - postOffices
        - careOfs
        - landmarks
        - houseNumbers
      properties:
        pincodes:
          type: string
          description: PIN code tagged from input address if found any.
          format: string
          example: '110010'
        floors:
          type: string
          description: Floor info tagged from input address if found any.
          format: string
          example: 'Floor No 1'
        roads:
          type: string
          description: Road tagged from the input address if found any.
          format: string
          example: 'Okhla Road'
        postOffices:
          type: string
          description: Post offices tagged from the input address if found any.
          format: string
          example: ''
        careOfs:
          type: string
          description: Care of (C/O) tagged from the input address if found any.
          format: string
          example: ''
        landmarks:
          type: string
          description: Landmark tagged from the input address if found any.
          format: string
          example: ''
        houseNumbers:
          description: House number information tagged from the input address if found any.
          $ref: '#/components/schemas/WP2'
    WP2:
      title: House Numbers Array
      description: The result object which contains the House Number Arrays of Woodpecker API.
      type: object
      required:
        - prefix
        - houseNo
        - formatted
      properties:
        prefix:
          type: string
          description: ''
          format: string
          example: ''
        houseNo:
          type: string
          description: ''
          format: string
          example: '237'
        formatted:
          type: string
          description: ''
          format: string
          example: '237'
    WP3:
      title: Address Information Object
      description: The result object which contains the Address Standardization API results.
      type: object
      required:
        - adminDetails
        - adminPattern
      properties:
        adminDetails:
          $ref: '#/components/schemas/WP4'
        adminPattern:
          type: array
          items:
            type: string
          example:
            - "state"
            - "city"
            - "locality"
            - "subLocality"
    WP4:
      title: Admin Details of Woodpecker API
      description: The result object which contains the Admin Details of Address Standardization API results
      type: object
      required:
        - state
        - locality
        - city
        - sublocality
        - subsublocality
      properties:
        state:
          $ref: '#/components/schemas/WP5'
        locality:
          $ref: '#/components/schemas/WP6'
        city:
          $ref: '#/components/schemas/WP7'
        sublocality:
          $ref: '#/components/schemas/WP8'
        subsublocality:
          $ref: '#/components/schemas/WP9'
    WP5:
      title: State Original Name
      type: object
      required:
        - originalName
      properties:
        originalName:
          type: string
          description: ''
          format: string
          example: 'Delhi'
    WP6:
      title: locality Original Name
      type: object
      required:
        - originalName
      properties:
        originalName:
          type: string
          description: ''
          format: string
          example: 'New Moti Nagar'
    WP7:
      title: city Original Name
      type: object
      required:
        - originalName
      properties:
        originalName:
          type: string
          description: ''
          format: string
          example: 'New Delhi'
    WP8:
      title: sublocality Original Name
      type: object
      required:
        - originalName
      properties:
        originalName:
          type: string
          description: ''
          format: string
          example: 'Phase 3'
    WP9:
      title: subsublocality Original Name
      type: object
      required:
        - originalName
      properties:
        originalName:
          type: string
          description: ''
          format: string
          example: 'Okhla'
    WP10:
      title: Admin Pattern of Woodpecker API
      description: The result object which contains the Admin Pattern of Address Standardization API results
      type: array
      example: "state"
    EL1:
      title: eLoc API Results
      description: The result object which contains the eLoc API results.
      type: object
      required:
        - responseCode
        - version
        - results
      properties:
        responseCode:
          type: integer
          description: This shows the response code of the results.
          format: integer
          example: 200
        version:
          type: string
          description: This shows the API version
          format: string
          example: '211.19'
        results:
          type: array
          description: The object contains the results of the reverse geocode API.
          items:
            $ref: '#/components/schemas/EL2'
    EL2:
      title: eLoc results object
      description: The result object which contains the Reverse Geocode API results.
      type: object
      required:
        - district
        - city
        - state
        - lat
        - lng
        - formatted_address
      properties:
        houseNumber:
          type: string
          description: 'House Number of the POI.'
          format: string
          example: '237'
        houseName:
          type: string
          description: 'House Name of the POI.'
          format: string
          example: 'MMI Building'
        poi:
          type: string
          description: 'Name of the POI.'
          format: string
          example: 'MapmyIndia Head Office'
        street:
          type: string
          description: 'Name of the street.'
          format: string
          example: 'Unnamed Road'
        subSubLocality:
          type: string
          description: 'Name of the subsublocality.'
          format: string
          example: ''
        subLocality:
          type: string
          description: 'Name of the sublocality.'
          format: string
          example: ''
        locality:
          type: string
          description: 'Name of the locality.'
          format: string
          example: 'Okhla industrial phase 3'
        village:
          type: string
          description: 'Name of the village.'
          format: string
          example: 'Okhla Vilage'
        subDistrict:
          type: string
          description: 'Name of the subDistrict.'
          format: string
          example: ''
        city:
          type: string
          description: 'Name of the city.'
          format: string
          example: 'New Delhi'
        state:
          type: string
          description: 'Name of the state.'
          format: string
          example: 'Delhi'
        pincode:
          type: integer
          description: 'Pincode of the location.'
          format: string
          example: '110010'
        longitude:
          type: string
          description: 'It shows us the longitude of the location searched.'
          format: double
          example: '77.092001'
        latitude:
          type: string
          description: 'It shows us the latitude of the location searched.'
          format: double
          example: '28.426335'
        type:
          type: string
          description: ''
          format: string
          example: 'POI'
        place_id:
          type: string
          description: 'Place ID of the POI.'
          format: string
          example: 'MMI000'
    RG1:
      title: Reverse Geocode API Results
      description: The result object which contains the Reverse Geocode API results.
      type: object
      required:
        - responseCode
        - version
        - results
      properties:
        responseCode:
          type: integer
          description: This shows the response code of the results.
          format: integer
          example: 200
        version:
          type: string
          description: This shows the API version
          format: string
          example: '211.19'
        results:
          type: array
          description: The object contains the results of the reverse geocode API.
          items:
            $ref: '#/components/schemas/RG2'
    RG2:
      title: Reverse geocode results object
      description: The result object which contains the Reverse Geocode API results.
      type: object
      required:
        - district
        - city
        - state
        - lat
        - lng
        - formatted_address
      properties:
        houseNumber:
          type: string
          description: 'House Number of the POI.'
          format: string
          example: '237'
        houseName:
          type: string
          description: 'House Name of the POI.'
          format: string
          example: 'MMI Building'
        poi:
          type: string
          description: 'Name of the POI.'
          format: string
          example: 'MapmyIndia Head Office'
        poi_dist:
          type: string
          description: 'The value of the poi district'
          format: string
          example: '8'
        street:
          type: string
          description: 'Name of the street.'
          format: string
          example: 'Unnamed Road'
        street_dist:
          type: string
          description: 'The value of the street district.'
          format: string
          example: '14'
        subSubLocality:
          type: string
          description: 'Name of the subsublocality.'
          format: string
          example: ''
        subLocality:
          type: string
          description: 'Name of the sublocality.'
          format: string
          example: ''
        locality:
          type: string
          description: 'Name of the locality.'
          format: string
          example: 'Okhla industrial phase 3'
        village:
          type: string
          description: 'Name of the village.'
          format: string
          example: 'Okhla Vilage'
        subDistrict:
          type: string
          description: 'Name of the subDistrict.'
          format: string
          example: ''
        city:
          type: string
          description: 'Name of the city.'
          format: string
          example: 'New Delhi'
        state:
          type: string
          description: 'Name of the state.'
          format: string
          example: 'Delhi'
        pincode:
          type: integer
          description: 'Pincode of the location.'
          format: string
          example: '110010'
        lat:
          type: string
          description: 'It shows us the latitude of the location searched.'
          format: double
          example: '28.426335'
        lng:
          type: string
          description: 'It shows us the longitude of the location searched.'
          format: double
          example: '77.092001'
        area:
          type: string
          description: 'It shows the area on which the result has been found. for eg: India, Bangladesh, etc.'
          format: string
          example: 'India'
        formatted_address:
          type: string
          description: 'This shows the formatted address of the POI.'
          format: string
          example: '237, MMI Building, MapmyIndia Head Office, Okhla industrial phase 3, Okhla Vilage, South Delhi, New Delhi, Delhi, 110010'
    POIalongtheRouteObject: 
      title: POI along the Route Object
      description: 'POI along the Route Object'
      type: object
      required: 
        - suggestedPOIs
      properties:
        suggestedPOIs: 
          type: array
          items:
              $ref: '#/components/schemas/suggestedPOIs'
    suggestedPOIs: 
      title: suggestedPOIs Object
      description: 'suggestedPOIs Object'
      type: object
      required: 
        - distance
        - place_id
        - poi
        - subSubLocality
        - subLocality
        - locality
        - city
        - subDistrict
        - district
        - state
        - poplrName
        - address
        - tel
        - email
        - website
        - longitude
        - latitude
        - e_lng
        - e_lat
        - brand_code
      properties:
        distance: 
          type: integer
          title: 'distance'
          description: >-
             distance of the POI.
          format: integer
          example: 1065
        place_id: 
          type: string
          title: 'place_id'
          description: >-
             eLoc of the POI
          format: string
          example: "74835C"
        poi: 
          type: string
          title: 'poi'
          description: >-
             Name of the POI.
          format: string
          example: "Cafe Nescafe"
        subSubLocality: 
          type: string
          title: 'subSubLocality'
          description: >-
             Subsublocality of the POI
          format: string
        subLocality: 
          type: string
          title: 'subLocality'
          description: >-
             Sublocality of the POI
          format: string
        locality: 
          type: string
          title: 'locality'
          description: >-
             Locality of the POI
          format: string
          example: "Pragati Maidan"
        city: 
          type: string
          title: 'city'
          description: >-
             City of the POI
          format: string
          example: "New Delhi"
        subDistrict: 
          type: string
          title: 'subDistrict'
          description: >-
             Sub district of the POI
          format: string
          example: "Connaught Place"
        district: 
          type: string
          title: 'district'
          description: >-
             District of the POI
          format: string
          example: "New Delhi District"
        state: 
          type: string
          title: 'state'
          description: >-
             State of the POI
          format: string
          example: "Delhi"
        poplrName: 
          type: string
          title: 'poplrName'
          description: >-
             Popular name of the POI
          format: string
          example: "Oberoi Hotel New Delhi"
        address: 
          type: string
          title: 'address'
          description: >-
             Address of the POI
          format: string
          example: "Khan Market, New Delhi, Delhi, 110003"
        tel: 
          type: string
          title: 'tel'
          description: >-
             Telephone number of the POI
          format: string
          example: "+911122205205"
        email: 
          type: string
          title: 'email'
          description: >-
             Email of the POI
          format: string
          example: "reservations@oberoigroup.com"
        website: 
          type: string
          title: 'website'
          description: >-
             Website of the POI
          format: string
          example: "www.nescafe.com"
        longitude: 
          type: number
          title: 'longitude'
          description: >-
             Longitude of the POI
          format: number
          example: 77.2411440000001
        latitude: 
          type: number
          title: 'latitude'
          description: >-
             Latitude of the POI
          format: number
          example: 28.6191640000001
        e_lng: 
          type: number
          title: 'e_lng'
          description: >-
             Entry longitude of the POI
          format: number
          example: 77.241316
        e_lat: 
          type: number
          title: 'e_lat'
          description: >-
             Entry latitude of the POI
          format: number
          example: 28.619444
        brand_code: 
          type: string
          title: 'brand_code'
          description: >-
             Brand id of the POI
          format: string
          example: "0"